数据结构--hash

哈希表，即散列表（Hash table）。是根据键直接访问内存存储位置的数据结构。也就是说它通过一个计算关于键值的函数，将所查询的数据映射到表中一个位置来访问记录。这个映射函数叫作散列函数，存放记录的表叫作散列表。

散列函数，即把Key通过一个固定的算法函数（hash函数）转换成一个整型数字，然后就对该数字对数组的长度进行取余，取余结果就当作数组的下标，将value存储在以该数字为下标的数组空间里。散列函数就是可以通过这个函数和关键字key，可以直接确定查找值位置。

哈希函数的构造方法：直接定址法、数字分析法、平方取中法、折叠法、随机数法、除留余数法等。

哈希冲突：对于不同的key关键字取得相同的散列地址，即当key1≠key2时，f(key1)=f(key2)，这种现象叫作碰撞，也叫冲突。
解决哈希冲突的方法：1.开放地址法，也称为再散列法。当关键字key的散列地址p出现冲突时，以p为基础再生成一个散列地址p1，如果p1还冲突，再以p为基础生成p2，直到不再发生冲突。
                通用的再散列函数:H = (F(key) + di) MOD m
                 1.1线性探测再散列
                    di = 1,2,3,4......m-1
                 1.2二次探测再散列
                    di = 1^2,-1^2,2^2,-2^2......k^2,-k^2  其中k<=m-1
                 1.3伪随机数探测再散列
                2.链地址法(拉链法、位桶法)



